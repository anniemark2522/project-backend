import db from "../config/firebase.js"; // ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Firebase

export const getGymClasses = async (req, res) => {
  try {
    const { gymId, name, loca } = req.query;
    let collectionRef = db.collection("detailGymClasses");

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏° gymId ‡∏´‡∏≤‡∏Å‡∏°‡∏µ
    if (gymId) {
      collectionRef = collectionRef.where("gymId", "==", gymId); 
    }

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏° name ‡∏´‡∏≤‡∏Å‡∏°‡∏µ
    let decodedName = null;
    if (name) {
      decodedName = decodeURIComponent(name).toLowerCase();
      console.log(`Searching for: ${decodedName}`);

      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ (case-insensitive)
      collectionRef = collectionRef
      .orderBy("name") // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠
      .startAt(decodedName)  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
      .endAt(decodedName + "\uf8ff");  // ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    }

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏° location ‡∏´‡∏≤‡∏Å‡∏°‡∏µ
    if (loca) {
      const decodedLoca = decodeURIComponent(loca).toLowerCase();
      console.log(`Searching for Province: ${decodedLoca}`);

      collectionRef = collectionRef.where("province", "==", decodedLoca); // ‡πÉ‡∏ä‡πâ "province" ‡πÅ‡∏ó‡∏ô "location"
    }

    const [snapshot1] = await Promise.all([
      collectionRef.get(),
    ]);

    // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    if (snapshot1.empty) {
      return res.status(404).json({ message: "No data found" });
    }

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Firestore
    const data = snapshot1.docs.map(doc => {
      const docData = doc.data();
      return {
        ...docData,
        classes: docData.classes || []  // ‡∏î‡∏∂‡∏á classes ‡∏î‡πâ‡∏ß‡∏¢
      };
    });

    let combineData = [...data];

    // üìå ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ name ‡πÉ‡∏´‡πâ filter ‡∏ï‡∏≤‡∏° name ‡∏´‡∏£‡∏∑‡∏≠ className
    if (decodedName) {
      combineData = combineData.filter(gym => {
        const gymNameMatch = gym.name.toLowerCase().includes(decodedName);
        const classNameMatch = gym.classes?.some(cls =>
          cls.className.toLowerCase().includes(decodedName)
        );
        return gymNameMatch || classNameMatch;  // ‡∏ä‡∏∑‡πà‡∏≠ gym ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠ class ‡∏ï‡∏£‡∏á‡∏Å‡πá‡πÑ‡∏î‡πâ
      });
    }

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• classes ‡∏ï‡∏≤‡∏° className ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    if (decodedName) {
      combineData = combineData.map(gym => {
        // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏•‡∏≤‡∏™‡∏†‡∏≤‡∏¢‡πÉ‡∏ô gym ‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏≤‡∏™
        const filteredClasses = gym.classes.filter(cls =>
          cls.className.toLowerCase().includes(decodedName)
        );
        return { ...gym, classes: filteredClasses };
      }).filter(gym => gym.classes.length > 0); // ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞ gym ‡∏ó‡∏µ‡πà‡∏°‡∏µ class ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    }

    if (combineData.length === 0) {
      return res.status(404).json({ message: "No matching data found" });
    }

    return res.status(200).json(combineData);
    
  } catch (error) {
    console.error("Error fetching data from Firestore:", error);
    return res.status(500).json({ error: "Internal Server Error" });
  }
};
